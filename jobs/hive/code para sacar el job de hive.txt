// Join con una tabla de juegos -> se crea una tabla 'games' a partir de app_id y app_name (únicos)
// el resultado es en formato juego -> reseña, recommended, votes_helpful, votes_funny (todo en función de la review)



CREATE EXTERNAL TABLE reviews (
  app_id STRING,
  app_name STRING,
  review_id STRING,
  language STRING,
  review STRING,
  timestamp_created BIGINT,
  timestamp_updated BIGINT,
  recommended BOOLEAN,
  votes_helpful INT,
  votes_funny INT,
  weighted_vote_score DOUBLE,
  comment_count INT,
  steam_purchase BOOLEAN,
  received_for_free BOOLEAN,
  written_during_early_access BOOLEAN,
  author_steamid STRING,
  author_num_games_owned INT,
  author_num_reviews INT,
  author_playtime_forever DOUBLE,
  author_playtime_last_two_weeks DOUBLE,
  author_playtime_at_review DOUBLE,
  author_last_played BIGINT
)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.OpenCSVSerde'
WITH SERDEPROPERTIES ("separatorChar" = ",")
STORED AS TEXTFILE
LOCATION 's3://leoxbucket16/data/'
TBLPROPERTIES ("skip.header.line.count"="1");


// en location debe estar el steam_reviews_clean.csv


CREATE TABLE games AS
SELECT DISTINCT app_id, app_name
FROM reviews;

CREATE TABLE game_recommendations AS
SELECT
    g.app_name,
    COUNT(*) AS total_reviews,
    SUM(CASE WHEN r.recommended THEN 1 ELSE 0 END) AS positive_reviews,
    ROUND(SUM(CASE WHEN r.recommended THEN 1 ELSE 0 END) / COUNT(*), 3) AS positive_rate
FROM games g
JOIN reviews r
  ON g.app_id = r.app_id
GROUP BY g.app_name
ORDER BY positive_rate DESC;


INSERT OVERWRITE DIRECTORY 's3://leoxbucket16/output/hive_game_recommendations'
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
SELECT * FROM game_recommendations;

